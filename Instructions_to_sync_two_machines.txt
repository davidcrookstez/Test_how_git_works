% Steps to sync a repository shared by a mac and a pc through github.

When installing git on the PC, when presented with the option of how you want to deal 
with line endings I chose option 2, namely, "Checkout as-is, commit Unix-style line
endings."

% Procedure ---

1. Initialise a repository in your chosen directory by typing,

git init

2. Add the files you want to the repository by typing,

git add ...

There are a number of options that can be tailed onto this.  I have typed,

git add ./\*.txt

and

git add ./\*.m

The aforementioned commands add all the ".txt" and ".m" files in the current directory, 
"./", and its subdirectories, "\" respectively.

3. To obtain current information about the files that have been added and are currently
being tracked type,

git status

4. Typing "git add" indicates that you want to stage the changes you have made to your 
".txt" and ".m" files.  To store the changes you need to commit them, this is done by 
typing,

git commit -a -m "A message"

The option "-a" indicates that you want all the files highlighted by "git add" to be 
committed.  "-m" indicates that you want to type a message with information about your 
commit, the message immediately follows the "-m" in speech marks.

5. Typing,

git log

After commits will indicate all previous commits of the tracked files.

%-----------------------------------------------------------------------------------------
% Adding files to github
6. Create a github account.

7. Create a new repository by pressing the "+ New repository" button.

8. Generate a name for your repository that doesn't contain spaces, then add a short 
description.  Choose whether your repository will be public or private.  Click the 
"Click repository button".

9. An 'HTTPS' address will be generated for your repository by git hub.

10. To add your local repository to the one hosted by github, you must first navigate to 
your local repository and type,

git remote add origin "HTTPS address generated by github"

This indicates that you want to generate a remote repository called "origin" at the 
location "HTTPS address generated by github".

To clone your local repository to the one hosted by github type,

git push -u origin master

This indicates that you want to push your local repository "master" to the one named
"origin" hosted by github.  The "-u" flag indicates that this is what you normally want
to do with "git push" and will mean that in future you can merely type,

git push

To upload your changes to the github hosted repository.

11. Your local repository will now be pushed to your github repository.  If you make any 
changes on your local repository, add and commit as before and then update the github
repository by typing,

git push

%-----------------------------------------------------------------------------------------
% Getting github hosted repository to a local computer
12. Download git onto local machine and initialise a local repository as before (maybe 
not)

13. To get the github hosted repository onto your local machine type,

git clone "HTTPS address generated by github"

14. Navigate into the cloned repository (This is important, otherwise you will be outside
your cloned repository, you will be looking at it from the outside).

15. From inside the directory you can use the same git commands as before to check the 
status, recently logged commits etc.

16. Typing,

git remote -v

will indicate the current configured remote repository for your "fork"

17. Typing,

git remote add upstream "HTTPS address generated by github"

will generate a quick name for the original repository you cloned from github.  The 
registration of the new name can be checked by typing,

git remote -v

It will now display the current configured remote repository for your "fork" and the 
original repository.

%-----------------------------------------------------------------------------------------
% Add changes made on local machine to the github hosted repository
18. Once changes have been made and committed on the local machine they are pushed up
to the github hosted repository by typing

git push -u origin master

This is the same as step 10.  The names of the repositories should be the same here as in 
step 10.